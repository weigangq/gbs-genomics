# load libraries
library(tidyverse) # load a package into memory
library(readxl) # load another package
x <- read_tsv("http://diverge.hunter.cuny.edu/~weigang/bio203.txt"
x <- read_tsv("http://diverge.hunter.cuny.edu/~weigang/bio203.txt")
x <- read_tsv("http://diverge.hunter.cuny.edu/~weigang/bio203.txt")
x
bio203.long <- x %>% pivot_longer(2:4, names_to = "Genotype", values_to = "Count")
bio203.long
data("iris")
glimpse(iris)
iris %>% ggplot(aes(x = Species, y = Sepal.Length )) +
geom_boxplot() +
theme_bw() +
coord_flip()
theme_bw() +
coord_flip()
iris %>% ggplot(aes(x = Species, y = Sepal.Length )) +
geom_boxplot() +
geom_point(shape = 1) +
theme_bw() +
coord_flip()
iris %>% ggplot(aes(x = Species, y = Sepal.Length )) +
geom_boxplot() +
geom_jitter(shape = 1) +
theme_bw() +
coord_flip()
iris %>% ggplot(aes(x = Species, y = Sepal.Length )) +
geom_boxplot() +
geom_jitter(shape = 1, width = 0.2) +
theme_bw() +
coord_flip()
# scatter plot to compare sepal length versus sepal width, which suggest significant correlation that can be tested with linear regression
iris %>% ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point(shape = 1) +
geom_smooth(method = "lm") +
facet_wrap(~Species) +
theme_bw()
q()
library(drc)
citation(drc)
citation("drc")
version("drc")
session.info()
sessions.info()
sessionInfo()
q()
install.packages("gplots")
install.packages("umap")
install.packages(c("broom", "conflicted", "dbplyr", "dplyr", "dtplyr", "forcats", "ggplot2", "googlesheets4", "haven", "hms", "httr", "jsonlite", "lubridate", "magrittr", "modelr", "pillar", "purrr", "ragg", "readr", "readxl", "reprex", "vest", "stringr", "tibble", "tidyr"))
install.packages(c("broom", "conflicted", "dbplyr", "dplyr", "dtplyr", "forcats", "ggplot2", "googlesheets4", "haven", "hms", "httr", "jsonlite", "lubridate", "magrittr", "modelr", "pillar", "purrr", "ragg", "readr", "readxl", "reprex", "vest", "stringr", "tibble", "tidyr"))
install.packages(c("broom", "conflicted", "dbplyr", "dplyr", "dtplyr", "forcats", "ggplot2", "googlesheets4", "haven", "hms", "httr", "jsonlite", "lubridate", "magrittr", "modelr", "pillar", "purrr", "ragg", "readr", "readxl", "reprex", "vest", "stringr", "tibble", "tidyr"))
sessionInfo()
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
tidyverse_update()
library(tidyverse)
tidyverse_update()
install.packages(c("dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4",
"hms", "modelr", "pillar", "rlang", "tibble"))
install.packages(c("dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "hms", "modelr", "pillar", "rlang", "tibble"))
library(tidyverse)
library(ggtree)
library(ggtree)
install.packages("ggtree")
sessionInfo()
q()
library(tidyverse)
library(ape)
library(phangorn)
library(broom)
load("RData-saved/gwas-sim.RData")
setwd("/Users/weiga/Dropbox/gbs-genomics/")
load("RData-saved/gwas-sim.RData")
y.sim <- bind_rows(list.sims)
y.sim %>%
ggplot(aes(log.p, log.p.lmm, color = as.factor(causal))) +
geom_point(size = 3, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, linetype = 2) +
theme_bw() +
scale_color_manual(values = c("gray", "brown")) +
geom_hline(yintercept = 4, linetype = 2, color = "red") +
facet_wrap(~homoplasy) +
theme(legend.position = "bottom")
y.sim %>%
ggplot(aes(x = estimate, y = log.p, color = as.factor(causal))) +
geom_point(size = 2, alpha = 0.5, shape = 1) +
scale_x_log10() +
geom_vline(xintercept = 1, linetype = 2) +
#  geom_hline(yintercept = c(3,7), linetype = 2) +
geom_point(aes(x = estimate, y = log.p.lmm, color = as.factor(causal)), alpha = 0.5, size = 2) +
#  geom_text_repel(data = y, aes(x = estimate, y = log.p.lmm, label = pos), color = "red", alpha = 0.5) +
theme_bw() +
xlab("odds ratio (log10)") +
ylab("signficance (-log10[p])") +
geom_hline(yintercept = 3, linetype = 2) +
theme(legend.position = "none")
# why some are corrected by pglmm and other are not?
y.sim %>% filter(log.p > 4 & causal == '0') %>%
ggplot(aes(log.p.lmm, ci)) +
geom_point() +
theme_bw()
# why some are corrected by pglmm and other are not?
y.sim %>% filter(log.p > 4 & causal == '0') %>%
ggplot(aes(log.p.lmm, ci)) +
geom_point(shape = 1) +
theme_bw()
# why some are corrected by pglmm and other are not?
y.sim %>% filter(log.p > 4 & causal == '0') %>%
ggplot(aes(log.p.lmm, ci)) +
geom_jitter(shape = 1) +
theme_bw()
# why some are corrected by pglmm and other are not?
y.sim %>% filter(log.p > 4) %>%
ggplot(aes(log.p.lmm, ci, color = as.factor(causal))) +
geom_jitter(shape = 1) +
facet_wrap(~test) +
theme_bw()
# why some are corrected by pglmm and other are not?
y.sim %>% filter(log.p > 4) %>%
ggplot(aes(log.p.lmm, ci, color = as.factor(causal))) +
geom_jitter(shape = 1) +
geom_vline(xintercept = 4, linetype = 4) +
facet_wrap(~test) +
theme_bw()
# why some are corrected by pglmm and other are not?
y.sim %>% filter(log.p > 4) %>%
ggplot(aes(y = log.p.lmm, x = ci, color = as.factor(causal))) +
geom_jitter(shape = 1) +
geom_hline(yintercept = 4, linetype = 4) +
facet_wrap(~test) +
theme_bw()
# why some are corrected by pglmm and other are not?
y.sim %>% filter(log.p > 4) %>%
ggplot(aes(y = log.p.lmm, x = ci, color = as.factor(causal))) +
geom_jitter(shape = 1) +
geom_hline(yintercept = 4, linetype = 4) +
facet_wrap(~test) +
theme_bw()
list.sims[[1]]
list.sims2 <- lapply(list.sims, function(x) {
ci.causal <- x %>% filter(causal == '1') %>% nth(1)
x <- x %>% mutate(ci.causal = ci.causal)})
list.sims[[1]] %>% filter(causal == '1')
list.sims[[1]] %>% filter(causal == '1') %>% pull(ci)
list.sims[[1]] %>% filter(causal == '1') %>% pull(ci) %>% nth(1)
list.sims2 <- lapply(list.sims, function(x) {
ci.causal <- x %>% filter(causal == '1') %>% pull(ci) %>% nth(1);
x <- x %>% mutate(ci.causal = ci.causal);
return(x)
})
y.sim <- bind_rows(list.sims2)
y.sim %>% pull(ci.causal) %>% stem()
list.sims2 <- lapply(list.sims, function(x) {
ci.causal <- x %>% filter(causal == '1') %>% pull(ci) %>% nth(1);
x <- x %>% mutate(ci.causal = ci.causal);
x <- x %>% mutate(hmp.causal = if_else(ci.causal <= 0.25, "0-Hi-hmp",
if_else(ci.causal < 1, "1-Med-hmp", "2-Consistent")));
return(x)
})
y.sim <- bind_rows(list.sims2)
y.sim %>%
ggplot(aes(log.p, log.p.lmm, color = as.factor(causal))) +
geom_point(size = 3, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, linetype = 2) +
theme_bw() +
scale_color_manual(values = c("gray", "brown")) +
geom_hline(yintercept = 4, linetype = 2, color = "red") +
facet_wrap(~hmp.causal) +
theme(legend.position = "bottom")
y.sim %>%
ggplot(aes(log.p, log.p.lmm, color = as.factor(causal))) +
geom_point(size = 3, alpha = 0.5) +
geom_abline(slope = 1, intercept = 0, linetype = 2) +
theme_bw() +
scale_color_manual(values = c("gray", "brown")) +
geom_hline(yintercept = 4, linetype = 2, color = "red") +
facet_wrap(~homoplasy) +
theme(legend.position = "bottom")
y.sim %>% group_by(hmp.causal) %>% filter(log.p.lmm > 4) %>% count()
y.sim %>% group_by(hmp.causal) %>% filter(log.p.lmm <= 4) %>% count()
y.sim %>% group_by(hmp.causal) %>% filter(log.p.lmm >= 4) %>% count()
y.sim %>% group_by(hmp.causal) %>% filter(log.p >= 4 & log.p.lmm >= 4) %>% count()
y.sim %>% group_by(hmp.causal) %>% filter(log.p >= 4 & log.p.lmm < 4) %>% count()
y.sim %>% group_by(hmp.causal, causal) %>% filter(log.p >= 4 & log.p.lmm >= 4) %>% count()
y.sim %>% group_by(hmp.causal, causal) %>% filter(log.p >= 4 & log.p.lmm < 4) %>% count()
install.packages("pROC")
data(aSAH)
library(pROC)
data(aSAH)
aSAH
roc(outcome ~ s100b, aSAH)
roc(outcome ~ s100b, dat = aSAH, plot = T)
roc(outcome ~ s100b, dat = aSAH, plot = T, percent = T)
roc(outcome ~ s100b, dat = aSAH, plot = T, percent = T, ci = T)
View(aSAH)
aSAH %>% ggplot(aes(x = outcome, y = s100b)) + geom_boxplot()
aSAH %>% ggplot(aes(x = outcome, y = wfns)) + geom_boxplot()
aSAH %>% ggplot(aes(x = outcome, y = s100b)) + geom_boxplot() + facet_wrap(~gender)
aSAH %>% ggplot(aes(x = outcome, y = ndka)) + geom_boxplot() + facet_wrap(~gender)
aSAH %>% ggplot(aes(x = outcome, y = s100b)) + geom_boxplot() + facet_wrap(~gender)
library(pROC)
roc(causal ~ log.p.lmm, dat = y.sim, plot = T, percent = T)
roc(causal ~ log.p, dat = y.sim, plot = T, percent = T)
roc(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '0-Hi-hmp'), plot = T, percent = T)
roc(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '1-Med-hmp'), plot = T, percent = T)
roc(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), plot = T, percent = T)
roc(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), plot = T, percent = F)
roc(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), plot = T, percent = T)
roc(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), plot = T, percent = T, ret = "coords")
x <- roc(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), plot = T, percent = T, ret = "coords")
x
warnings()
x <- rock(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), ret = "coords")
x <- roc_(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), ret = "coords")
x <- roc_(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), ret = "all_coords")
roc_(causal ~ log.p, dat = y.sim %>% filter(hmp.causal == '2-Consistent'), ret = "all_coords")
roc_(dat = y.sim %>% filter(hmp.causal == '2-Consistent'), causal, log.p, ret = "all_coords")
roc_(data = y.sim %>% filter(hmp.causal == '2-Consistent'), response = causal, predictor = log.p, ret = "all_coords")
roc_(data = y.sim, response = y.sim$causal, predictor = y.sim$log.p, ret = "all_coords")
y.sim <- y.sim %>% mutate(success.correction = if_else(log.p <= 4, 'NA', if_else(log.p.lmm <= 4, '1', '0')))
roc(success.correction ~ log.p, dat = y.sim, plot = T, percent = T)
roc(success.correction ~ log.p, dat = y.sim, plot = T, percent = T, na.rm = T)
y.sim <- y.sim %>% mutate(success.correction = if_else(log.p <= 4, NA, if_else(log.p.lmm <= 4, '1', '0')))
roc(success.correction ~ log.p, dat = y.sim, plot = T, percent = T, na.rm = T)
roc(success.correction ~ log.p, dat = y.sim)
y.sim %>%
roc(success.correction, log.p) %>%
coords(transpose = F)
y.sim %>%
roc(success.correction, log.p) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.6,
specificity > 0.6)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.6,
specificity > 0.6)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p.lmm, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p.lmm, plot = T, percent = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, ci, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(success.correction, ci, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(success.correction, ci, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim <- y.sim %>% mutate(success.correction = if_else(log.p <= 4 | causal == '1', NA, if_else(log.p.lmm <= 4, '1', '0')))
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, direction = "<")
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = F)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = F, add = T)
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(success.correction, log.p, plot = T, percent = T, smooth = F, add = T)
y.sim %>%
roc(success.correction, ci.causal, plot = T, percent = T, smooth = F)
y.sim %>%
roc(success.correction, ci.causal, plot = T, percent = T, smooth = T)
y.sim %>%
roc(success.correction, ci, plot = T, percent = T, smooth = T, add = T)
y.sim %>% roc(causal, log.p, plot = T, precent = T, smooth = T, ci = T)
y.sim %>% roc(causal, log.p, plot = T, precent = T, smooth = T)
y.sim %>% roc(causal, log.p, plot = T, precent = T, smooth = T, partial.auc = c(100,90))
warnings()
y.sim %>% roc(causal, log.p, plot = T, smooth = T, partial.auc = c(100,90))
y.sim %>% roc(causal, log.p, plot = T, smooth = T, percent = T)
warnings()
y.sim %>% roc(causal, log.p, plot = T, smooth = T, percent = T)
y.sim %>% roc(causal, log.p.lmm, plot = T, smooth = T, percent = T, add = T)
y.sim %>% roc(causal, log.p, plot = T, smooth = T, percent = T, partial.auc = c(100,90))
y.sim %>% roc(causal, log.p.lmm, plot = T, smooth = T, percent = T, add = T, partial.auc = c(100,90))
y.sim %>% roc(causal, p.value, plot = T, smooth = T, percent = T, partial.auc = c(100,90))
y.sim %>% roc(causal, p.value, plot = T, smooth = T, percent = T)
y.sim %>% roc(causal, log.p, plot = T, smooth = T, percent = T)
y.sim %>% roc(causal, log.p.lmm, plot = T, smooth = T, percent = T, add = T, partial.auc = c(100,90))
y.sim %>% roc(causal, log.p, plot = T, smooth = T, percent = T, partial.auc = c(100,90))
y.sim %>% roc(causal, log.p.lmm, plot = T, smooth = T, percent = T, add = T, partial.auc = c(100,90))
roc.test(response = y.sim$causal, predictor1 = y.sim$log.p, predictor2 = y.sim$log.p.lmm, partial.auc = c(100,90), percent = T)
warnings()
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p, plot = T, percent = T, smooth = F)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(causal, log.p, plot = T, percent = T, smooth = T, add = T, color = 'red')
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(causal, log.p, plot = T, percent = T, smooth = F, add = T)
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(causal, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p, plot = T, percent = T, smooth = T)
y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(causal, log.p, plot = T, percent = T, smooth = T, add = T, color = 'red')
y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(causal, log.p, plot = T, percent = T, smooth = T, add = T)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9)
y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p.lmm) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9)
roc.fisher <- y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9)
roc.lmm <- y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p.lmm) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9)
head(roc.lmm)
head(roc.fisher)
roc.fisher <- roc.fisher %>% mutate(test = 'fisher')
roc.lmm <- roc.lmm %>% mutate(test = 'pglmm')
x.roc <- bind_rows(roc.fisher, roc.lmm)
x.roc
x.roc %>% ggplot(aes(threshold, specificity, group = test)) +
geom_line()
x.roc %>% ggplot(aes(threshold, specificity, group = test, color = test)) +
geom_line() +
theme_bw()
x.roc %>% ggplot(aes(threshold, sensitivity, group = test, color = test)) +
geom_line() +
theme_bw()
x.roc %>% ggplot(aes(threshold, specificity, group = test, color = test)) +
geom_line(size = 2) +
theme_bw()
x.roc %>% ggplot(aes(threshold, specificity, group = test, color = test)) +
geom_line(linewidth = 2) +
theme_bw()
roc.fisher1 <- y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9)
roc.lmm1 <- y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p.lmm) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9)
roc.fisher1 <- y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9) %>%
mutate(test = 'fisher', homoplasy = '0-Hi')
mutate(test = 'pglmm', homoplasy = '0-Hi')
roc.lmm1 <- y.sim %>% filter(hmp.causal == '0-Hi-hmp') %>%
roc(causal, log.p.lmm) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9) %>%
mutate(test = 'pglmm', homoplasy = '0-Hi')
roc.fisher2 <- y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(causal, log.p) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9) %>%
mutate(test = 'fisher', homoplasy = '1-Med')
roc.lmm2 <- y.sim %>% filter(hmp.causal == '1-Med-hmp') %>%
roc(causal, log.p.lmm) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9) %>%
mutate(test = 'pglmm', homoplasy = '1-Med')
roc.fisher3 <- y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(causal, log.p) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9) %>%
mutate(test = 'fisher', homoplasy = '2-Consistent')
roc.lmm3 <- y.sim %>% filter(hmp.causal == '2-Consistent') %>%
roc(causal, log.p.lmm) %>%
coords(transpose = F) %>%
filter(sensitivity > 0.9,
specificity > 0.9) %>%
mutate(test = 'pglmm', homoplasy = '2-Consistent')
x.roc <- bind_rows(roc.fisher1, roc.lmm1, roc.fisher2, roc.lmm2,roc.fisher3, roc.lmm3)
x.roc %>%
ggplot(aes(threshold, specificity, group = test, color = homoplasy)) +
geom_line(linewidth = 2) +
#  facet_wrap(~test) +
theme_bw()
x.roc %>%
ggplot(aes(threshold, specificity, group = test, color = homoplasy)) +
geom_line(linewidth = 2) +
facet_wrap(~test) +
theme_bw()
x.roc %>%
ggplot(aes(threshold, specificity, group = test, color = homoplasy)) +
geom_line() +
facet_wrap(~test) +
theme_bw()
head(x.roc)
x.roc %>%
ggplot(aes(threshold, specificity, color = homoplasy)) +
geom_point() +
facet_wrap(~test) +
theme_bw()
x.roc %>%
ggplot(aes(threshold, specificity, color = homoplasy)) +
geom_point(shape =1) +
facet_wrap(~test) +
theme_bw()
x.roc %>%
ggplot(aes(threshold, specificity, color = homoplasy, group = homoplasy)) +
geom_point(shape =1) +
geom_line() +
facet_wrap(~test) +
theme_bw()
x.roc %>%
ggplot(aes(threshold, specificity, color = homoplasy, group = homoplasy)) +
#  geom_point(shape =1) +
geom_line() +
facet_wrap(~test) +
theme_bw()
x.roc %>%
ggplot(aes(threshold, specificity, color = homoplasy, group = homoplasy)) +
#  geom_point(shape =1) +
geom_line(linewidth = 1.5) +
facet_wrap(~test) +
theme_bw()
x.roc %>%
ggplot(aes(threshold, specificity, color = homoplasy, group = homoplasy)) +
#  geom_point(shape =1) +
geom_line(linewidth = 1.5) +
facet_wrap(~test) +
theme_bw() +
theme(legend.position = "bottom")
