scale_x_continuous(name = 'Log2 fold change', breaks = c(-3, -2, -1,  0, 1, 2, 3), limits = c(-3, 3)) +
scale_y_continuous(limits = c(.2, 2.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 25)) +#, legend.text = element_text(size = 20)) +
labs(y = '-log10 p value') +
ggtitle('B31 lp56 syn codon shuffle')
#volcano plot
df2log10 %>% ggplot(aes(x = fc, y = neg_log10, color = motif, label = if_else(p.val <= 0.05, locus2, ''))) +
geom_point() +
geom_text_repel() +
#scale_color_manual(values = cols) +
#geom_text(aes(label = if_else(p.val <= 0.05, locus, '')), size = 1, vjust = 0, hjust = -0.1) +
geom_vline(xintercept = 0, linetype = 2, color = 'gray') +
#geom_hline(yintercept = 0, linetype = 1) +
scale_x_continuous(name = 'Log2 fold change', breaks = c(-3, -2, -1,  0, 1, 2, 3), limits = c(-3, 3)) +
scale_y_continuous(limits = c(.2, 2.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 25), legend.text = element_text(size = 20)) +
labs(y = '-log10 p value') +
ggtitle('B31 lp56 syn codon shuffle')
#theme(plot.title = element_text(size =25, hjust = 0.5))
#facet_wrap(~motif)
#theme(plot.title = element_text(hjust = 0.5))
ggsave('B31_lp56_volcano_all_opt.jpeg', height = 8, width = 11)
#volcano plot
dfBblog10 %>% ggplot(aes(x = fc, y = neg_log10, color = motif, label = if_else(p.val <= 0.05, locus2, ''))) +
geom_point() +
geom_text_repel() +
#scale_color_manual(values = cols) +
#geom_text(aes(label = if_else(p.val <= 0.05, locus, '')), size = 1, vjust = 0, hjust = -0.1) +
geom_vline(xintercept = 0, linetype = 2, color = 'gray') +
#geom_hline(yintercept = 0, linetype = 1) +
scale_x_continuous(name = 'Log2 fold change', breaks = c(-3, -2, -1,  0, 1, 2, 3), limits = c(-3, 3)) +
scale_y_continuous(limits = c(.2, 2.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 25), legend.text = element_text(size = 20)) +
labs(y = '-log10 p value') +
ggtitle('B31 lp56 syn codon shuffle')
#theme(plot.title = element_text(size =25, hjust = 0.5))
#facet_wrap(~motif)
#theme(plot.title = element_text(hjust = 0.5))
ggsave('B31_lp56_volcano_opt.jpeg', height = 8, width = 11)
x <- lp56 %>% mutate(locus2 = str_remove(id, 'BB_'))
# %>% filter(motif == 'GNAAYG')
# %>% filter(type == 'sim')
x2<- x %>% filter(type == 'obs')
x3 <- x2 %>% filter(motif == 'CGRKA' | motif == 'GNAAYG' | motif == 'HCAG')
#add correlation coefficient
ggplot(x3, aes(x = seq_length, y = total, color = motif, add = 'reg.line', label = locus2)) +
geom_point() +
geom_text_repel() +
geom_smooth(method='lm') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(color = 'black')) + #axis.text = element_text(size = 15)) +
labs(x= "Sequence Length", y= "Motif Count") +
#xlim(18000,60000) +
facet_wrap(~motif, scales = 'free') +
stat_cor(aes(label = paste(..r.label..)))
ggsave('B31_lp56_line_count.jpeg', height = 6, width =12)
View(x)
#setwd("c:/Users/weiga/Dropbox/U54-Andy/")
#setwd("Dropbox/U54-Andy/")
library(tidyverse)
library(broom)
library(pheatmap)
library(ggrepel)
library(readxl)
############################
# Ludwig DB
# 1364 miRNAs in 62 tissue, two bodies, quantile-normalized
x <- read_excel("Ludwig-db.xlsx", sheet = "data_matrix_quantile")
View(x)
#setwd("c:/Users/weiga/Dropbox/U54-Andy/")
setwd("Dropbox/U54-Andy/")
############################
# Ludwig DB
# 1364 miRNAs in 62 tissue, two bodies, quantile-normalized
x <- read_excel("Ludwig-db.xlsx", sheet = "data_matrix_quantile")
library(tidyverse)
library(broom)
library(pheatmap)
library(ggrepel)
library(readxl)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggvenn)
library(dplyr)
data <- read.csv('https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS_variants/main/results/final_variant_scores/final_variant_scores.csv')
View(data)
View(data)
#covid receptor binding data
data <- read.csv('https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS_variants/main/results/final_variant_scores/final_variant_scores.csv')
View(data)
View(data)
View(data)
#covid RBD mutational analysis data
data <- read.csv('https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS_variants/main/results/final_variant_scores/final_variant_scores.csv')
View(data)
x <- data %>% filter(target == 'Beta')
x <- data %<% filter(target == 'Beta')
#covid RBD mutational analysis data
library(tidyverse)
library(broom)
library(pheatmap)
library(ggrepel)
library(readxl)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggvenn)
library(dplyr)
x <- data %>% filter(target == 'Beta')
View(x)
length(unique(x$position))
View(data)
print(unique(x$target))
print(unique(data$target))
#covid RBD mutational analysis data
library(tidyverse)
library(broom)
library(pheatmap)
library(ggrepel)
library(readxl)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggvenn)
library(dplyr)
data <- read.csv('https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS_variants/main/results/final_variant_scores/final_variant_scores.csv')
print(unique(data$target))
View(data)
x <- data %>% filter(position == '501')
View(x)
#covid RBD mutational analysis data
library(tidyverse)
library(broom)
library(pheatmap)
library(ggrepel)
library(readxl)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggvenn)
library(dplyr)
data <- read.csv('https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS_variants/main/results/final_variant_scores/final_variant_scores.csv')
View(data)
x <- data %>% filter(target == 'Beta')
View(x)
#covid RBD mutational analysis data
library(tidyverse)
library(broom)
library(pheatmap)
library(ggrepel)
library(readxl)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggvenn)
library(dplyr)
data <- read.csv('https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS_variants/main/results/final_variant_scores/final_variant_scores.csv')
View(data)
#covid RBD mutational analysis data
library(tidyverse)
library(broom)
library(pheatmap)
library(ggrepel)
library(readxl)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggvenn)
library(dplyr)
data <- read.csv('https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS_variants/main/results/final_variant_scores/final_variant_scores.csv')
View(data)
#covid RBD mutational analysis data
library(tidyverse)
library(broom)
library(pheatmap)
library(ggrepel)
library(readxl)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggvenn)
library(dplyr)
data <- read.csv('https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS_variants/main/results/final_variant_scores/final_variant_scores.csv')
x <- data %>% filter(position == '501')
length(unique(x$position))
print(unique(data$target))
View(data)
library(ggplot2)
library(tidyverse)
library(dplyr)
setwd('/Users/brandonely/Desktop/gbs-genomics/data')
#read vcftools output
pi.site <- read.table('snps2.sites.pi', header = T)
pi.windows <- read.table('snps2_10k.windowed.pi', header = T)
taj <- read.table('snps2_10k.Tajima.D', header = T)
tstv <- read.table('snps2.tstv.summary', header = T)
View(tstv)
### plots for nucleotide diversity ###
hist(pi.windows$PI, br = 20)
boxplot(pi.windows$PI,ylab="diversity")
pi.windows %>%
ggplot(aes(x = BIN_START, y = PI)) +
geom_line(color = 'steelblue') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Nucleotide Diversity', subtitle = '10K sliding windows',x = 'Genome Position', y = 'Diveristy (Pi)')
View(pi.windows)
pi.windows %>%
ggplot(aes(x = BIN_START, y = N_VARIANTS)) +
geom_line(color = 'steelblue') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Frequency', subtitle = '10K sliding windows',x = 'Genome Position', y = '# of SNPs')
unique(pi.windows$CHROM)
sum(pi.windows$N_VARIANTS)
#snp frequency across 10K windows of genome
pi.windows %>%
ggplot(aes(x = BIN_START, y = N_VARIANTS)) +
geom_bar(stat = 'identity',color = 'steelblue') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Frequency', subtitle = '10K sliding windows',x = 'Genome Position', y = '# of SNPs')
#snp frequency across 10K windows of genome
pi.windows %>%
ggplot(aes(x = BIN_START, y = N_VARIANTS)) +
geom_bar(stat = 'identity',color = 'red4') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Frequency', subtitle = '10K sliding windows',x = 'Genome Position', y = '# of SNPs')
#snp frequency across 10K windows of genome
pi.windows %>%
ggplot(aes(x = BIN_START, y = N_VARIANTS)) +
geom_bar(stat = 'identity',color = 'red3') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Frequency', subtitle = '10K sliding windows',x = 'Genome Position', y = '# of SNPs')
View(tstv)
#ts/tv analysis
tstv_2 <- tstv[1:6, ]
View(tstv_2)
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_2 <- tstv_2 %>% mutate(type = if_else(MODEL == 'AG' | MODEL == 'CT', 'Transition', 'Transversion'))
View(tstv_2)
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_2 %>%
ggplot(aes(x = reorder(MODEL, value), y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_2 %>%
ggplot(aes(x = reorder(MODEL), y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_2 %>%
ggplot(aes(x = reorder(type), y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_2 %>%
ggplot(aes(x = reorder(MODEL, type), y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_2 %>%
ggplot(aes(x = reorder(MODEL, -type), y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_3 <- within(tsts_2, type <- factor(type, levels=MODEL(sort(table(type), decreasing=TRUE))))
tstv_3 <- within(tstv_2, type <- factor(type, levels=MODEL(sort(table(type), decreasing=TRUE))))
tstv_3 <- within(tstv_2, type <- factor(type, levels=type(sort(table(MODEL), decreasing=TRUE))))
tstv_2 %>%
ggplot(aes(x = reorder(MODEL,), y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_2 %>%
ggplot(aes(x = reorder(MODEL), y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
#ts/tv analysis
tstv_2 <- tstv[1:6, ]
tstv_2 <- tstv_2 %>% mutate(type = if_else(MODEL == 'AG' | MODEL == 'CT', 'Transition', 'Transversion'))
tstv_2$MODEL <- factor(tstv_2$MODEL, levels = c("AG", "CT", "AT", "AC", "GT", "GC"))
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
View(tstv)
#ts/tv analysis
tstv_2 <- tstv[1:6, ]
tstv_2 <- tstv_2 %>% mutate(type = if_else(MODEL == 'AG' | MODEL == 'CT', 'Transition', 'Transversion'))
tstv_2$MODEL <- factor(tstv_2$MODEL, levels = c("AG", "CT", "AT", "AC", "GT", "CG"))
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
#read vcftools output
pi.site <- read.table('snps2.sites.pi', header = T)
View(pi.site)
pi.windows <- read.table('snps2_10k.windowed.pi', header = T)
taj <- read.table('snps2_10k.Tajima.D', header = T)
tstv <- read.table('snps2.tstv.summary', header = T)
#snp frequency across 10K windows of genome
pi.windows %>%
ggplot(aes(x = BIN_START, y = N_VARIANTS)) +
geom_bar(stat = 'identity',color = 'red3') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Frequency', subtitle = '10K sliding windows',x = 'Genome Position', y = '# of SNPs')
#ts/tv analysis
tstv_2 <- tstv[1:6, ]
tstv_2 <- tstv_2 %>% mutate(type = if_else(MODEL == 'AG' | MODEL == 'CT', 'Transition', 'Transversion'))
tstv_2$MODEL <- factor(tstv_2$MODEL, levels = c("AG", "CT", "AT", "AC", "GT", "CG"))
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
### plots for nucleotide diversity ###
hist(pi.windows$PI, br = 20)
boxplot(pi.windows$PI,ylab="diversity")
pi.windows %>%
ggplot(aes(x = BIN_START, y = PI)) +
geom_line(color = 'steelblue') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Nucleotide Diversity', subtitle = '10K sliding windows',x = 'Genome Position', y = 'Diveristy (Pi)')
### plots for tajima's D ###
hist(taj$TajimaD,br=20)
taj %>%
ggplot(aes(x = BIN_START, y = TajimaD)) +
geom_line(color = 'steelblue') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'Tajima D', subtitle = '10K sliding windows',x = 'Genome Position', y = 'TajimaD')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
#read vcftools output
pi.site <- read.table('snps2.sites.pi', header = T)
pi.windows <- read.table('snps2_10k.windowed.pi', header = T)
taj <- read.table('snps2_10k.Tajima.D', header = T)
tstv <- read.table('snps2.tstv.summary', header = T)
#snp frequency across 10K windows of genome
pi.windows %>%
ggplot(aes(x = BIN_START, y = N_VARIANTS)) +
geom_bar(stat = 'identity',color = 'red3') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Frequency', subtitle = '10K sliding windows',x = 'Genome Position', y = '# of SNPs')
#ts/tv analysis
tstv_2 <- tstv[1:6, ]
tstv_2 <- tstv_2 %>% mutate(type = if_else(MODEL == 'AG' | MODEL == 'CT', 'Transition', 'Transversion'))
tstv_2$MODEL <- factor(tstv_2$MODEL, levels = c("AG", "CT", "AT", "AC", "GT", "CG"))
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
### plots for nucleotide diversity ###
hist(pi.windows$PI, br = 20)
boxplot(pi.windows$PI,ylab="diversity")
pi.windows %>%
ggplot(aes(x = BIN_START, y = PI)) +
geom_line(color = 'steelblue') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Nucleotide Diversity', subtitle = '10K sliding windows',x = 'Genome Position', y = 'Diveristy (Pi)')
### plots for tajima's D ###
hist(taj$TajimaD,br=20)
taj %>%
ggplot(aes(x = BIN_START, y = TajimaD)) +
geom_line(color = 'steelblue') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'Tajima D', subtitle = '10K sliding windows',x = 'Genome Position', y = 'TajimaD')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
scale_y_continuous(expand = c(0, 0)) +
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
scale_y_continuous(limits = c(0, 16500), expand = c(0, 0)) +
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
scale_y_continuous(limits = c(0, ), expand = c(0, 0)) +
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
scale_y_continuous(limits = c(0, 20000), expand = c(0, 0)) +
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
scale_y_continuous(limits = c(0, 17000), expand = c(0, 0)) +
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
scale_y_continuous(limits = c(0, 18000), expand = c(0, 0)) +
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = 'Type', y = 'Count', fill = '')
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
scale_y_continuous(limits = c(0, 18000), expand = c(0, 0)) +
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = '', y = 'Count', fill = '')
taj %>%
ggplot(aes(x = BIN_START, y = TajimaD)) +
geom_line(color = 'purple4') +
#formating
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'Tajima D', subtitle = '10K sliding windows',x = 'Genome Position', y = 'TajimaD')
source("~/Desktop/gbs-genomics/data/vcf_plots.R", echo=TRUE)
tstv_2 %>%
ggplot(aes(x = MODEL, y = COUNT, fill = type)) +
geom_bar(stat = 'identity') +
#formating
scale_y_continuous(limits = c(0, 18000), expand = c(0, 0)) +
theme_classic() +
theme(title = element_text(size = 12), axis.text=element_text(size=12), axis.title=element_text(size=12), panel.border = element_rect(color = "black",fill = NA, linewidth = 1)) +
labs(title = 'SNP Transition/Transversion',x = '', y = 'Count', fill = '')
